name: 清理工作流运行记录

on:
  workflow_dispatch:
    inputs:
      repo:
        description: '清理的仓库(格式:用户名/仓库名)'
        required: true
        default: 'Numbersf/Action-Build'
      workflow_name:
        description: '清理的工作流名称'
        required: true
        default: 'Build OnePlus_SukiSU Ultra All'
      count:
        description: '检查的最多运行次数'
        required: false
        default: '20'
      delete_failed:
        description: '删除失败的运行记录？'
        required: false
        type: boolean
        default: true
      delete_success:
        description: '删除成功的运行记录？'
        required: false
        type: boolean
        default: false
      delete_cancelled:
        description: '删除已取消的运行记录？'
        required: false
        type: boolean
        default: false
      reverse_order:
        description: '从旧到新开始清理？'
        required: false
        type: boolean
        default: false

permissions:
  actions: write

jobs:
  cleanup:
    runs-on: ubuntu-latest

    steps:
      - name: 安装 GitHub CLI
        run: sudo apt-get install gh -y

      - name: 安装 jq（用于解析 JSON）
        run: sudo apt-get install jq -y

      - name: 使用 GITHUB_TOKEN 进行认证
        run: echo "${{ secrets.GITHUB_TOKEN }}" | gh auth login --with-token

      - name: 清理 Build OnePlus_SukiSU Ultra All 和 本工作流记录
        env:
          REPO: ${{ inputs.repo }}
          COUNT: ${{ inputs.count }}
          DELETE_FAILED: ${{ inputs.delete_failed }}
          DELETE_SUCCESS: ${{ inputs.delete_success }}
          DELETE_CANCELLED: ${{ inputs.delete_cancelled }}
          REVERSE_ORDER: ${{ inputs.reverse_order }}
          WORKFLOW_NAME: ${{ inputs.workflow_name }}
          CURRENT_RUN_ID: ${{ github.run_id }}
        run: |
          set -e

          echo "正在查找工作流 \"$WORKFLOW_NAME\" 的 ID..."
          WORKFLOW_ID=$(gh api repos/$REPO/actions/workflows | jq -r ".workflows[] | select(.name == \"$WORKFLOW_NAME\") | .id")

          if [ -z "$WORKFLOW_ID" ]; then
            echo "未找到名为 \"$WORKFLOW_NAME\" 的工作流！"
            exit 1
          fi

          echo "找到工作流 ID: $WORKFLOW_ID"
          echo "正在获取最近 $COUNT 条运行记录..."

          RUNS_RAW=$(gh api "repos/$REPO/actions/workflows/$WORKFLOW_ID/runs?per_page=$COUNT" | jq -c '.workflow_runs')
          if [[ "$REVERSE_ORDER" == "true" ]]; then
            echo "启用从旧到新清理顺序"
            RUNS=$(echo "$RUNS_RAW" | jq -c '. | reverse | .[]')
          else
            RUNS=$(echo "$RUNS_RAW" | jq -c '.[]')
          fi

          echo "$RUNS" | while read run; do
            ID=$(echo "$run" | jq -r '.id')
            STATUS=$(echo "$run" | jq -r '.conclusion')
            STATE=$(echo "$run" | jq -r '.status')

            if [[ "$STATE" == "in_progress" || "$STATE" == "queued" ]]; then
              echo "跳过运行 ID: $ID（状态为 $STATE）"
              continue
            fi

            if [[ "$STATUS" == "failure" && "$DELETE_FAILED" != "true" ]]; then continue; fi
            if [[ "$STATUS" == "success" && "$DELETE_SUCCESS" != "true" ]]; then continue; fi
            if [[ "$STATUS" == "cancelled" && "$DELETE_CANCELLED" != "true" ]]; then continue; fi

            echo "删除运行记录 ID: $ID (状态: $STATUS)"
            gh api -X DELETE "repos/$REPO/actions/runs/$ID" || echo "删除失败（可能权限不足或 ID 不存在）"
          done

          echo "查找当前工作流（清理工作流运行记录）自身的 ID..."
          SELF_WORKFLOW_ID=$(gh api repos/$REPO/actions/workflows | jq -r '.workflows[] | select(.name == "清理工作流运行记录") | .id')

          if [ -z "$SELF_WORKFLOW_ID" ]; then
            echo "未找到自身工作流 ID，跳过。"
            exit 0
          fi

          echo "自身工作流 ID 为: $SELF_WORKFLOW_ID"
          SELF_RUNS=$(gh api "repos/$REPO/actions/workflows/$SELF_WORKFLOW_ID/runs?per_page=50" | jq -c '.workflow_runs[]')

          echo "$SELF_RUNS" | while read run; do
            ID=$(echo "$run" | jq -r '.id')
            if [[ "$ID" == "$CURRENT_RUN_ID" ]]; then
              echo "跳过当前运行 ID: $ID"
              continue
            fi

            echo "删除本工作流运行记录 ID: $ID"
            gh api -X DELETE "repos/$REPO/actions/runs/$ID" || echo "删除失败（可能权限不足或 ID 不存在）"
          done